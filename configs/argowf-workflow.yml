apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: k3sdemoapp-
spec:
  # entrypoint is the name of the template used as the starting point of the workflow
  entrypoint: k3sdemoapp
  # the 'k3sdemoapp' template accepts a parameter 'revision', with a default of 'cfe12d6'.
  # this can be overridden via argo CLI (e.g. `argo submit ci.yaml -p revision=0dea2d0`)
  arguments:
    parameters:
    - name: revision
      value: master
  # a temporary volume, named workdir, will be used as a working directory
  # for this workflow. This volume is passed around from step to step.
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

  templates:
    - name: k3sdemoapp
      inputs:
        parameters:
        - name: revision
      steps:
      - - name: build
          template: build-k3sdemoapp
          arguments:
            parameters:
            - name: revision
              value: "{{inputs.parameters.revision}}"
      - - name: push
          template: push-k3sdemoapp

    - name: build-k3sdemoapp
      inputs:
        parameters:
        - name: revision
        artifacts:
        - name: code
          path: /src
          git:
            repo: https://github.com/nihiluis/k3sdemoapp.git
            revision: "{{inputs.parameters.revision}}"
      container:
        image: docker:19.03
        command: [sh, -c]
        args: ["
          cd /src &&
          docker build -t k3sdemoapp:latest .
        "]
        volumeMounts:
        - name: workdir
          mountPath: /workspace

    - name: push-k3sdemoapp
      container:
        image: docker:19.03
        command: [sh, -c]
        args: ["
          docker tag k3sdemoapp:latest $DOCKER_REGISTRY/k3sdemoapp:latest &&
          docker push $DOCKER_REGISTRY/k3sdemoapp:latest
        "]
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            secretKeyRef:
              name: docker-setup
              key: docker-registry