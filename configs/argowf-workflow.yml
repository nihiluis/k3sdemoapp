apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: k3sdemoapp-
spec:
  # entrypoint is the name of the template used as the starting point of the workflow
  entrypoint: k3sdemoapp
  # the 'k3sdemoapp' template accepts a parameter 'revision', with a default of 'cfe12d6'.
  # this can be overridden via argo CLI (e.g. `argo submit ci.yaml -p revision=0dea2d0`)
  arguments:
    parameters:
    - name: revision
      value: cfe12d6
  # a temporary volume, named workdir, will be used as a working directory
  # for this workflow. This volume is passed around from step to step.
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

  templates:
  - name: k3sdemoapp
    inputs:
      parameters:
      - name: revision
    steps:
    - - name: build
        template: build-k3sdemoapp
        arguments:
          parameters:
          - name: revision
            value: "{{inputs.parameters.revision}}"

 - name: build-k3sdemoapp
    inputs:
      parameters:
      - name: revision
      artifacts:
      - name: code
        path: /workspace
        git:
          repo: https://github.com/golang/example.git
          revision: "{{inputs.parameters.revision}}"
    container:
      image: docker:19.03
      command: [sh, -c]
      args: ["
        cd /workspace &&
        docker build -t k3sdemoapp:latest .
      "]
      volumeMounts:
      - name: workdir
        mountPath: /workspace

- name: push-k3sdemoapp
    container:
      image: docker:19.03
      command: [sh, -c]
      args: ["
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin &&
        docker tag k3sdemoapp:latest your-registry/k3sdemoapp:latest &&
        docker push your-registry/k3sdemoapp:latest
      "]
      env:
      - name: DOCKER_USERNAME
        valueFrom:
          secretKeyRef:
            name: docker-credentials
            key: username
      - name: DOCKER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: docker-credentials
            key: password
      volumeMounts:
      - name: workdir
        mountPath: /workspace